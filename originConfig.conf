net {
  type = mainnet
  #type = testnet
}
enery.limit.block.num = 0

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
  ]
  needToUpdateAsset = true
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}


node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"
  fullNodeAllowShieldedTransaction = true
  zenTokenId=1000001

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18889

  # Number of gRPC thread, default availableProcessors / 2
  # rpc.thread = 16

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  connectFactor = 0.3
  activeConnectFactor = 0.1

  active = [
    # Initial active peers
    # Sample entries:
    "127.0.0.1:18889",
    "127.0.0.1:18892",
  ]

  maxActiveNodes = 30

  minParticipationRate = 0

  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 708 # 32: testnet; 101: debug
  }

  http {
    fullNodePort = 8190
    solidityPort = 8191
  }

  rpc {
    port = 50051
    solidityPort = 50061
    # This configuration takes effect only if db.version = 2,default value is 50061
    # solidityPort = 50061

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }



}

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "127.0.0.1:18889",
    "127.0.0.1:18892",
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TLLM21wteSPs4hKjbxgmH1L6poyMjeTbHm"
      balance = "99000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM"
      balance = "0"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: TB4B1RMhoPeivkj4Hebm6tttHjRY9yQFes
      url = "http://Mercury.org",
      voteCount = 105
    },
    {
      address: TT1smsmhxype64boboU8xTuNZVCKP1w6qT
      url = "http://Venus.org",
      voteCount = 104
    },
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localwitness = []

block = {
  needSyncCheck = false # first node : false, other : true
  maintenanceTimeInterval = 30000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
  proposalExpireTime = 6000
  checkFrozenTime = 0

}
vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 10.0
  saveInternalTx = true
}

committee = {
  allowAdaptiveEnergy = 1
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowDelegateResource = 1
  allowSameTokenName = 1
  allowTvmTransferTrc10 = 1
  allowMultiSign = 1 //mainnet:0 (reset by committee),test:1
  allowDeferredTransaction = 1
  allowProtoFilterNum = 1
  allowAccountStateRoot = 1
  allowTvmConstantinople = 1
  allowTvmSolidity059 = 1
  changedDelegation = 1
}

log.level = {
  root = "INFO" // TRACE;DEBUG;INFO;WARN;ERROR
}
